{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "// Load Tesseract.js library\nconst script = document.createElement('script');\nscript.src = 'https://cdn.jsdelivr.net/npm/tesseract.js@4.0.2/dist/tesseract.min.js';\ndocument.head.appendChild(script);\n\nscript.onload = function() {\n    document.getElementById(\"processButton\").addEventListener(\"click\", function () {\n        const fileInput = document.getElementById(\"imageInput\");\n        const file = fileInput.files[0];\n        const canvas = document.getElementById(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = function (event) {\n                const img = new Image();\n                img.onload = function () {\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n                    context.drawImage(img, 0, 0);\n\n                    // Recognize text using Tesseract.js\n                    Tesseract.recognize(canvas, 'eng').then(({ data: { text } }) => {\n                        // Speak the recognized text\n                        const utterance = new SpeechSynthesisUtterance(text);\n                        speechSynthesis.speak(utterance);\n                        console.log(\"Recognized text:\", text);\n                    });\n                };\n                img.src = event.target.result;\n            };\n            reader.readAsDataURL(file);\n        } else {\n            alert(\"Please select an image file.\");\n        }\n    });\n};",
      "status": "[4]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "function() {\n    document.getElementById(\"processButton\").addEventListener(\"click\", function () {\n        const fileInput = document.getElementById(\"imageInput\");\n        const file = fileInput.files[0];\n        const canvas = document.getElementById(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = function (event) {\n                const img = new Image();\n                img.onload = function () {\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n                    context.drawImage(img, 0, 0);\n\n                    // Recognize text using Tesseract.js\n                    Tesseract.recognize(canvas, 'eng').then(({ data: { text } }) =&gt; {\n                        // Speak the recognized text\n                        const utterance = new SpeechSynthesisUtterance(text);\n                        speechSynthesis.speak(utterance);\n                        console.log(\"Recognized text:\", text);\n                    });\n                };\n                img.src = event.target.result;\n            };\n            reader.readAsDataURL(file);\n        } else {\n            alert(\"Please select an image file.\");\n        }\n    });\n} <br>",
      "type": "code"
    },
    {
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Real-Time Text Recognition and Audio Reader</title>\n\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>Real-Time Text Recognition and Audio Reader</h1>\n    \n    <input type=\"file\" id=\"imageInput\" accept=\"image/*\">\n    <canvas id=\"canvas\" style=\"display: none;\"></canvas>\n    \n    <button id=\"processButton\">Read Text Aloud</button>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/tesseract.js@2.1.4/dist/tesseract.min.js\"></script>\n    <script src=\"app.js\"></script>\n</body>\n</html>\n\n",
      "status": "",
      "output": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Real-Time Text Recognition and Audio Reader</title>\n\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n\n\n    <h1>Real-Time Text Recognition and Audio Reader</h1>\n    \n    <input type=\"file\" id=\"imageInput\" accept=\"image/*\">\n    <canvas id=\"canvas\" style=\"display: none;\"></canvas>\n    \n    <button id=\"processButton\">Read Text Aloud</button>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/tesseract.js@2.1.4/dist/tesseract.min.js\"></script>\n    <script src=\"app.js\"></script>\n\n\n\n",
      "type": "html"
    },
    {
      "code": "/* style.css */\n\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    text-align: center;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    font-size: 24px;\n    margin-top: 20px;\n    color: #333;\n}\n\n#imageInput {\n    display: block;\n    margin: 20px auto;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n}\n\n#processButton {\n    font-size: 18px;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n#processButton:hover {\n    background-color: #0056b3;\n}\n\ncanvas {\n    display: none;\n    margin: 20px auto;\n    max-width: 100%;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n}\n\ninput, button {\n    font-size: 16px;\n}\n",
      "status": "",
      "output": "/* style.css */\n\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    text-align: center;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    font-size: 24px;\n    margin-top: 20px;\n    color: #333;\n}\n\n#imageInput {\n    display: block;\n    margin: 20px auto;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n}\n\n#processButton {\n    font-size: 18px;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n#processButton:hover {\n    background-color: #0056b3;\n}\n\ncanvas {\n    display: none;\n    margin: 20px auto;\n    max-width: 100%;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n}\n\ninput, button {\n    font-size: 16px;\n}\n",
      "type": "html"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}